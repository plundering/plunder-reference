;;;
;;; Natural Numbers
;;; ===============
;;;
;;; Core jets:
;;;
;;; - toNat,dec
;;; - add,sub ;;; - mul,div,mod ;;; - lsh,rsh,met
;;; - mix,dis,con
;;;
;;; What about `nat_take`?
;;; What about `setBit`?
;;; What about `getBit`?
;;; What about `flipBit`?
;;; What about `popCount`?

/+ bool (if ifNot true false not and or xor)
/+ prim (seq isNat cdr die)

= (toNat x)    | 2 0 3 x
= inc          | 3
= (dec x)      | 2 0 y&y x
= (exec f z x) | 2 z (exec f f-z) x

= (add x y) | exec inc toNat-x y
= (mul x y) | exec add-x 0 y
= (sub x y) | exec dec x y
= (lte x y) | not (sub x y)
= (lth x y) | lte inc-x y
= (gte x y) | lte y x
= (gth x y) | lth y x
= (aeq x y) | and lte-y-x lte-x-y
= (min x y) | if lte-x-y x y
= (max x y) | if gth-x-y x y
= (div x y) | if (lth x y) 0 inc-(div sub-x-y y)
= (mod x y) | sub x | mul y | div x y
= (bex n)   | exec mul-2 1 n
= (lsh x y) | mul bex-y x
= (rsh v n) | div v bex-n

= (even n) | not mod-n-2
= (odd n)  | mod n 2

; TODO Is a cleaner implementation possible?
= (met n)
. 0 n
? (go acc n)
| seq acc
| ifNot n acc
| go (inc acc) (div n 2)

; TODO Can a better name be found for this?
= (roundUp num x)
| ifNot x           num
| ifNot (mod num x) num
| sub (add num x) (mod num x)


;;;;;;;;;;;;;;;;;;;;
;; Pad Operations ;; (That should live in `pad.sire`)
;;;;;;;;;;;;;;;;;;;;

; padTake?
(takeBits n v)=(mod v bex-n)

; TODO What use is this?  What laws does it follow?  Why not just padWeld?
= (bitWeld x y)
| add x | lsh y met-x

= (perbit f x y)
. x y 0 0
? (go a b off acc)
| ifNot (add a b) acc
@ bit | f (mod a 2) (mod b 2)
@ acc | add acc (lsh bit off)
| seq acc
| go (div a 2) (div b 2) (inc off) acc

= (con x y) | perbit or  x y
= (dis x y) | perbit and x y
= (mix x y) | perbit xor x y


;;;;;;;;;;;
;; Tests ;;
;;;;;;;;;;;

?? inc ( add 0   0   )
?? inc ( add 0   0-0 )
?? inc ( add 0-0 0   )
?? inc ( add 0-0 0-0 )
?? add 0 1
?? add 1 0

?? aeq 5 5
?? aeq 6 mul-2-3
?? aeq 2 sub-4-2
?? gth 4 3
?? gte 4 3
?? gte 4 4
?? aeq 0 (sub 3 4)
?? aeq 0 (sub 3 3)
?? aeq 1 (sub 3 2)
?? aeq 2 (sub 3 1)
?? aeq 3 (sub 3 0)
?? aeq 0 (1 2)
?? aeq (1 2) 0

?? aeq 1 (mix 0 1)
?? aeq 1 (mix 1 0)
?? aeq 3 (mix 2 1)
?? aeq 1 (mix 2 3)

?? aeq 0 (roundUp 0 4)
?? aeq 4 (roundUp 3 4)
?? aeq 8 (roundUp 5 4)


;;;;;;;;;;;;;
;; Exports ;;
;;;;;;;;;;;;;

^-^ inc dec add sub mod mul div
^-^ toNat
^-^ aeq lth gth lte gte min max
^-^ even odd
^-^ met
^-^ roundUp
^-^ lsh rsh con mix dis bex
^-^ takeBits
^-^ isNat toNat
^-^ exec
^-^ perbit
