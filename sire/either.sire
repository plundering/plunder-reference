;;;
;;; data Either a b = LEFT a | RIGHT b
;;;

/+  prim   (I K)
/+  prim   (car cdr die)
/+  nat    (inc dec)
/+  bool   (if)

= (LEFT x)  (0 x)
= (RIGHT x) (1 x)

(eitherCase x l r)=(if (car x) (! r cdr-x) (! l cdr-x))

(fromRight l x)=(! eitherCase x l I)

(eitherCaseLeft x r l)=(if (car x) (! r cdr-x) (! l cdr-x))

(eitherOpen x r)=(! eitherCase x _&x r)

(eitherOpenLeft x l)=(! eitherCase x l _&x)

(fromLeft r x)=(! eitherCase x I r)

(eitherGetRight x k)=(! eitherCase x _&x k)

(eitherGetLeft x k)=(! eitherCase x k _&x)

(eitherMap f val)=(! eitherCase val 0 (x & 1 f-x))


;;;;;;;;;;;
;; Tests ;;
;;;;;;;;;;;

?? eitherCase RIGHT-0 K-0 inc
?? eitherCase RIGHT-1 K-0 I
?? eitherCase RIGHT-2 K-0 dec
?? eitherCase LEFT-9  K-1 die
?? eitherCase LEFT-1  I   die
?? eitherCase LEFT-0  inc die


;;;;;;;;;;;;;
;; Exports ;;
;;;;;;;;;;;;;

^-^ LEFT RIGHT
^-^ fromLeft fromRight
^-^ eitherCase eitherOpen
^-^ eitherOpenLeft eitherCaseLeft
^-^ eitherGetRight eitherGetLeft
^-^ eitherMap
